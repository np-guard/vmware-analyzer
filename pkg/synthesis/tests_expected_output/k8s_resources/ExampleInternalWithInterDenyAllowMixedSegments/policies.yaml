apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: Network Policy To Allow Access To DNS Server
        nsx-id: none
    creationTimestamp: null
    name: dns-policy
    namespace: default
spec:
    egress:
        - ports:
            - port: 53
              protocol: UDP
          to:
            - namespaceSelector: {}
              podSelector:
                matchLabels:
                    k8s-app: kube-dns
    podSelector: {}
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (VMs within IPs 10.0.0.0/24 and VMs not within IPs 10.0.0.0/30) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1005"
    creationTimestamp: null
    name: policy-1
    namespace: default
spec:
    egress:
        - to:
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: VMs_within_IPs__10.0.0.0-24
              operator: Exists
            - key: VMs_within_IPs__10.0.0.0-30
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'dup of src: (VMs within IPs 10.0.0.0/24 and VMs not within IPs 10.0.0.0/30) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1005"
    creationTimestamp: null
    name: policy-2
    namespace: default
spec:
    egress:
        - to:
            - podSelector: {}
    podSelector:
        matchExpressions:
            - key: VMs_within_IPs__10.0.0.0-24
              operator: Exists
            - key: VMs_within_IPs__10.0.0.0-30
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (VMs within IPs 10.0.0.0/24 and VMs not within IPs 10.0.0.0/30) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1005"
    creationTimestamp: null
    name: policy-3
    namespace: default
spec:
    ingress:
        - from:
            - podSelector:
                matchExpressions:
                    - key: VMs_within_IPs__10.0.0.0-24
                      operator: Exists
                    - key: VMs_within_IPs__10.0.0.0-30
                      operator: DoesNotExist
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (VMs within IPs 10.0.0.0/16 and not in segment seg_4-5) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1007"
    creationTimestamp: null
    name: policy-4
    namespace: default
spec:
    egress:
        - to:
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: VMs_within_IPs__10.0.0.0-16
              operator: Exists
            - key: to-NLCimplement
              operator: Exists
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'dup of src: (VMs within IPs 10.0.0.0/16 and not in segment seg_4-5) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1007"
    creationTimestamp: null
    name: policy-5
    namespace: default
spec:
    egress:
        - to:
            - podSelector: {}
    podSelector:
        matchExpressions:
            - key: VMs_within_IPs__10.0.0.0-16
              operator: Exists
            - key: to-NLCimplement
              operator: Exists
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (VMs within IPs 10.0.0.0/16 and not in segment seg_4-5) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1007"
    creationTimestamp: null
    name: policy-6
    namespace: default
spec:
    ingress:
        - from:
            - podSelector:
                matchExpressions:
                    - key: VMs_within_IPs__10.0.0.0-16
                      operator: Exists
                    - key: to-NLCimplement
                      operator: Exists
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (VMs within IPs 172.16.10.10/16) dst: (IP addr in 0.0.0.0/0 and group != real-group) conn: All Connections'
        nsx-id: "2200"
    creationTimestamp: null
    name: policy-7
    namespace: default
spec:
    egress:
        - to:
            - podSelector:
                matchExpressions:
                    - key: group__real-group
                      operator: DoesNotExist
    podSelector:
        matchExpressions:
            - key: VMs_within_IPs__172.16.10.10-16
              operator: Exists
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (IP addr in 172.16.10.10/16) dst: (IP addr in 0.0.0.0/0 and group != real-group) conn: All Connections'
        nsx-id: "2200"
    creationTimestamp: null
    name: policy-8
    namespace: default
spec:
    ingress:
        - from:
            - ipBlock:
                cidr: 172.16.0.0/21
            - ipBlock:
                cidr: 172.16.8.0/23
            - ipBlock:
                cidr: 172.16.10.0/29
            - ipBlock:
                cidr: 172.16.10.8/31
            - ipBlock:
                cidr: 172.16.10.11/32
            - ipBlock:
                cidr: 172.16.10.12/30
            - ipBlock:
                cidr: 172.16.10.16/28
            - ipBlock:
                cidr: 172.16.10.32/27
            - ipBlock:
                cidr: 172.16.10.64/26
            - ipBlock:
                cidr: 172.16.10.128/25
            - ipBlock:
                cidr: 172.16.11.0/24
            - ipBlock:
                cidr: 172.16.12.0/22
            - ipBlock:
                cidr: 172.16.16.0/20
            - ipBlock:
                cidr: 172.16.32.0/19
            - ipBlock:
                cidr: 172.16.64.0/18
            - ipBlock:
                cidr: 172.16.128.0/17
    podSelector:
        matchExpressions:
            - key: group__real-group
              operator: DoesNotExist
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (VMs within IPs 172.16.10.10/16) dst: (IP addr in 0.0.0.0/0 and group != real-group) conn: All Connections'
        nsx-id: "2200"
    creationTimestamp: null
    name: policy-9
    namespace: default
spec:
    ingress:
        - from:
            - podSelector:
                matchExpressions:
                    - key: VMs_within_IPs__172.16.10.10-16
                      operator: Exists
    podSelector:
        matchExpressions:
            - key: group__real-group
              operator: DoesNotExist
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (VMs within IPs 192.168.0.0/16) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "3000"
    creationTimestamp: null
    name: policy-10
    namespace: default
spec:
    egress:
        - to:
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: VMs_within_IPs__192.168.0.0-16
              operator: Exists
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'dup of src: (VMs within IPs 192.168.0.0/16) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "3000"
    creationTimestamp: null
    name: policy-11
    namespace: default
spec:
    egress:
        - to:
            - podSelector: {}
    podSelector:
        matchExpressions:
            - key: VMs_within_IPs__192.168.0.0-16
              operator: Exists
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (IP addr in 192.168.0.0/16) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "3000"
    creationTimestamp: null
    name: policy-12
    namespace: default
spec:
    ingress:
        - from:
            - ipBlock:
                cidr: 192.168.0.1/32
            - ipBlock:
                cidr: 192.168.0.2/31
            - ipBlock:
                cidr: 192.168.0.4/30
            - ipBlock:
                cidr: 192.168.0.8/29
            - ipBlock:
                cidr: 192.168.0.16/28
            - ipBlock:
                cidr: 192.168.0.32/27
            - ipBlock:
                cidr: 192.168.0.64/26
            - ipBlock:
                cidr: 192.168.0.128/25
            - ipBlock:
                cidr: 192.168.1.0/24
            - ipBlock:
                cidr: 192.168.2.0/23
            - ipBlock:
                cidr: 192.168.4.0/22
            - ipBlock:
                cidr: 192.168.8.0/21
            - ipBlock:
                cidr: 192.168.16.0/20
            - ipBlock:
                cidr: 192.168.32.0/19
            - ipBlock:
                cidr: 192.168.64.0/18
            - ipBlock:
                cidr: 192.168.128.0/18
            - ipBlock:
                cidr: 192.168.192.0/19
            - ipBlock:
                cidr: 192.168.224.0/20
            - ipBlock:
                cidr: 192.168.240.0/21
            - ipBlock:
                cidr: 192.168.248.0/22
            - ipBlock:
                cidr: 192.168.252.0/23
            - ipBlock:
                cidr: 192.168.254.0/24
            - ipBlock:
                cidr: 192.168.255.1/32
            - ipBlock:
                cidr: 192.168.255.2/31
            - ipBlock:
                cidr: 192.168.255.4/30
            - ipBlock:
                cidr: 192.168.255.8/29
            - ipBlock:
                cidr: 192.168.255.16/28
            - ipBlock:
                cidr: 192.168.255.32/27
            - ipBlock:
                cidr: 192.168.255.64/26
            - ipBlock:
                cidr: 192.168.255.128/25
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (VMs within IPs 192.168.0.0/16) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "3000"
    creationTimestamp: null
    name: policy-13
    namespace: default
spec:
    ingress:
        - from:
            - podSelector:
                matchExpressions:
                    - key: VMs_within_IPs__192.168.0.0-16
                      operator: Exists
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (group = real-group and not in segment seg_4-5 and VMs not within IPs 172.16.10.10/16) dst: (group = real-group) conn: All Connections'
        nsx-id: "4008"
    creationTimestamp: null
    name: policy-14
    namespace: default
spec:
    egress:
        - to:
            - podSelector:
                matchExpressions:
                    - key: group__real-group
                      operator: Exists
    podSelector:
        matchExpressions:
            - key: group__real-group
              operator: Exists
            - key: to-NLCimplement
              operator: Exists
            - key: VMs_within_IPs__172.16.10.10-16
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (group = real-group and not in segment seg_4-5 and VMs not within IPs 172.16.10.10/16) dst: (group = real-group) conn: All Connections'
        nsx-id: "4008"
    creationTimestamp: null
    name: policy-15
    namespace: default
spec:
    ingress:
        - from:
            - podSelector:
                matchExpressions:
                    - key: group__real-group
                      operator: Exists
                    - key: to-NLCimplement
                      operator: Exists
                    - key: VMs_within_IPs__172.16.10.10-16
                      operator: DoesNotExist
    podSelector:
        matchExpressions:
            - key: group__real-group
              operator: Exists
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: Default Deny Network Policy
        nsx-id: "1003"
    creationTimestamp: null
    name: default-deny
    namespace: default
spec:
    podSelector: {}
    policyTypes:
        - Ingress
        - Egress
