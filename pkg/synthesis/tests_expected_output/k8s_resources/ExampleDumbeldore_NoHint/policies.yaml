apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: Network Policy To Allow Access To DNS Server
        nsx-id: none
    creationTimestamp: null
    name: dns-policy
    namespace: default
spec:
    egress:
        - ports:
            - port: 53
              protocol: UDP
          to:
            - namespaceSelector: {}
              podSelector:
                matchLabels:
                    k8s-app: kube-dns
    podSelector: {}
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (group = DumbledoreAll) dst: (*) conn: All Connections'
        nsx-id: "9198"
    creationTimestamp: null
    name: policy-1
    namespace: default
spec:
    egress:
        - to:
            - podSelector: {}
    podSelector:
        matchExpressions:
            - key: group__DumbledoreAll
              operator: Exists
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (group = DumbledoreAll) dst: (*) conn: All Connections'
        nsx-id: "9198"
    creationTimestamp: null
    name: policy-2
    namespace: default
spec:
    ingress:
        - from:
            - podSelector:
                matchExpressions:
                    - key: group__DumbledoreAll
                      operator: Exists
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (group = DumbledoreNoSly) dst: (group != Slytherin) conn: All Connections'
        nsx-id: "9200"
    creationTimestamp: null
    name: policy-3
    namespace: default
spec:
    egress:
        - to:
            - podSelector:
                matchExpressions:
                    - key: group__Slytherin
                      operator: DoesNotExist
    podSelector:
        matchExpressions:
            - key: group__DumbledoreNoSly
              operator: Exists
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: Default Deny Network Policy
        nsx-id: "10230"
    creationTimestamp: null
    name: default-deny
    namespace: default
spec:
    podSelector: {}
    policyTypes:
        - Ingress
        - Egress
