apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg_2-3 and not in segment seg_1) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1005"
    creationTimestamp: null
    name: policy-0
    namespace: seg-8
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
                        - seg_1
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
                        - default
              podSelector: {}
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: in_Segment__seg_2-3
              operator: Exists
            - key: in_Segment__seg_1
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg_2-3 and not in segment seg_1) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1005"
    creationTimestamp: null
    name: policy-1
    namespace: seg-9-10
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
                        - seg_1
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
                        - default
              podSelector: {}
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: in_Segment__seg_2-3
              operator: Exists
            - key: in_Segment__seg_1
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg_2-3 and not in segment seg_1) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1005"
    creationTimestamp: null
    name: policy-2
    namespace: default
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
                        - seg_1
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
                        - default
              podSelector: {}
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: in_Segment__seg_2-3
              operator: Exists
            - key: in_Segment__seg_1
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg_2-3 and not in segment seg_1) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1005"
    creationTimestamp: null
    name: policy-3
    namespace: seg_2-3
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
                        - seg_1
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
                        - default
              podSelector: {}
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: in_Segment__seg_2-3
              operator: Exists
            - key: in_Segment__seg_1
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg_2-3 and not in segment seg_1) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1005"
    creationTimestamp: null
    name: policy-4
    namespace: seg_4-5
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
                        - seg_1
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
                        - default
              podSelector: {}
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: in_Segment__seg_2-3
              operator: Exists
            - key: in_Segment__seg_1
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg_2-3 and not in segment seg_1) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1005"
    creationTimestamp: null
    name: policy-5
    namespace: seg-6-7
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
                        - seg_1
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
                        - default
              podSelector: {}
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: in_Segment__seg_2-3
              operator: Exists
            - key: in_Segment__seg_1
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg_2-3 and not in segment seg_1) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1005"
    creationTimestamp: null
    name: policy-6
    namespace: seg-9-10
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
                        - seg-9-10
                        - default
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg_2-3
                      operator: Exists
                    - key: in_Segment__seg_1
                      operator: DoesNotExist
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg_2-3 and not in segment seg_1) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1005"
    creationTimestamp: null
    name: policy-7
    namespace: seg_1
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
                        - seg-9-10
                        - default
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg_2-3
                      operator: Exists
                    - key: in_Segment__seg_1
                      operator: DoesNotExist
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg_2-3 and not in segment seg_1) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1005"
    creationTimestamp: null
    name: policy-8
    namespace: seg_2-3
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
                        - seg-9-10
                        - default
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg_2-3
                      operator: Exists
                    - key: in_Segment__seg_1
                      operator: DoesNotExist
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg_2-3 and not in segment seg_1) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1005"
    creationTimestamp: null
    name: policy-9
    namespace: seg_4-5
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
                        - seg-9-10
                        - default
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg_2-3
                      operator: Exists
                    - key: in_Segment__seg_1
                      operator: DoesNotExist
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg_2-3 and not in segment seg_1) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1005"
    creationTimestamp: null
    name: policy-10
    namespace: seg-6-7
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
                        - seg-9-10
                        - default
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg_2-3
                      operator: Exists
                    - key: in_Segment__seg_1
                      operator: DoesNotExist
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg_2-3 and not in segment seg_1) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1005"
    creationTimestamp: null
    name: policy-11
    namespace: seg-8
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
                        - seg-9-10
                        - default
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg_2-3
                      operator: Exists
                    - key: in_Segment__seg_1
                      operator: DoesNotExist
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg_2-3 and not in segment seg_1) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1005"
    creationTimestamp: null
    name: policy-12
    namespace: default
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
                        - seg-9-10
                        - default
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg_2-3
                      operator: Exists
                    - key: in_Segment__seg_1
                      operator: DoesNotExist
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-6-7 and not in segment seg_4-5) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1007"
    creationTimestamp: null
    name: policy-13
    namespace: seg_2-3
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
                        - seg_1
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
                        - default
              podSelector: {}
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: in_Segment__seg-6-7
              operator: Exists
            - key: in_Segment__seg_4-5
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-6-7 and not in segment seg_4-5) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1007"
    creationTimestamp: null
    name: policy-14
    namespace: seg-8
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
                        - seg_1
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
                        - default
              podSelector: {}
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: in_Segment__seg-6-7
              operator: Exists
            - key: in_Segment__seg_4-5
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-6-7 and not in segment seg_4-5) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1007"
    creationTimestamp: null
    name: policy-15
    namespace: seg-9-10
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
                        - seg_1
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
                        - default
              podSelector: {}
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: in_Segment__seg-6-7
              operator: Exists
            - key: in_Segment__seg_4-5
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-6-7 and not in segment seg_4-5) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1007"
    creationTimestamp: null
    name: policy-16
    namespace: default
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
                        - seg_1
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
                        - default
              podSelector: {}
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: in_Segment__seg-6-7
              operator: Exists
            - key: in_Segment__seg_4-5
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-6-7 and not in segment seg_4-5) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1007"
    creationTimestamp: null
    name: policy-17
    namespace: seg-6-7
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
                        - seg_1
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
                        - default
              podSelector: {}
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: in_Segment__seg-6-7
              operator: Exists
            - key: in_Segment__seg_4-5
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-6-7 and not in segment seg_4-5) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1007"
    creationTimestamp: null
    name: policy-18
    namespace: seg_1
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
                        - seg_1
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
                        - default
              podSelector: {}
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: in_Segment__seg-6-7
              operator: Exists
            - key: in_Segment__seg_4-5
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-6-7 and not in segment seg_4-5) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1007"
    creationTimestamp: null
    name: policy-19
    namespace: seg-9-10
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg_2-3
                        - seg-8
                        - seg-9-10
                        - default
                        - seg-6-7
                        - seg_1
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg-6-7
                      operator: Exists
                    - key: in_Segment__seg_4-5
                      operator: DoesNotExist
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-6-7 and not in segment seg_4-5) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1007"
    creationTimestamp: null
    name: policy-20
    namespace: seg_1
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg_2-3
                        - seg-8
                        - seg-9-10
                        - default
                        - seg-6-7
                        - seg_1
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg-6-7
                      operator: Exists
                    - key: in_Segment__seg_4-5
                      operator: DoesNotExist
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-6-7 and not in segment seg_4-5) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1007"
    creationTimestamp: null
    name: policy-21
    namespace: seg_2-3
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg_2-3
                        - seg-8
                        - seg-9-10
                        - default
                        - seg-6-7
                        - seg_1
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg-6-7
                      operator: Exists
                    - key: in_Segment__seg_4-5
                      operator: DoesNotExist
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-6-7 and not in segment seg_4-5) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1007"
    creationTimestamp: null
    name: policy-22
    namespace: seg_4-5
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg_2-3
                        - seg-8
                        - seg-9-10
                        - default
                        - seg-6-7
                        - seg_1
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg-6-7
                      operator: Exists
                    - key: in_Segment__seg_4-5
                      operator: DoesNotExist
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-6-7 and not in segment seg_4-5) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1007"
    creationTimestamp: null
    name: policy-23
    namespace: seg-6-7
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg_2-3
                        - seg-8
                        - seg-9-10
                        - default
                        - seg-6-7
                        - seg_1
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg-6-7
                      operator: Exists
                    - key: in_Segment__seg_4-5
                      operator: DoesNotExist
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-6-7 and not in segment seg_4-5) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1007"
    creationTimestamp: null
    name: policy-24
    namespace: seg-8
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg_2-3
                        - seg-8
                        - seg-9-10
                        - default
                        - seg-6-7
                        - seg_1
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg-6-7
                      operator: Exists
                    - key: in_Segment__seg_4-5
                      operator: DoesNotExist
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-6-7 and not in segment seg_4-5) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1007"
    creationTimestamp: null
    name: policy-25
    namespace: default
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg_2-3
                        - seg-8
                        - seg-9-10
                        - default
                        - seg-6-7
                        - seg_1
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg-6-7
                      operator: Exists
                    - key: in_Segment__seg_4-5
                      operator: DoesNotExist
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-8) dst: (group != real-group) conn: All Connections'
        nsx-id: "2200"
    creationTimestamp: null
    name: policy-26
    namespace: seg-8
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
                        - seg_1
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
              podSelector:
                matchExpressions:
                    - key: group__real-group
                      operator: DoesNotExist
    podSelector:
        matchExpressions:
            - key: in_Segment__seg-8
              operator: Exists
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-8) dst: (IP addr is external) conn: All Connections'
        nsx-id: "2200"
    creationTimestamp: null
    name: policy-27
    namespace: seg-8
spec:
    egress:
        - to:
            - podSelector: {}
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: in_Segment__seg-8
              operator: Exists
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-8) dst: (group != real-group) conn: All Connections'
        nsx-id: "2200"
    creationTimestamp: null
    name: policy-28
    namespace: seg_1
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-8
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg-8
                      operator: Exists
    podSelector:
        matchExpressions:
            - key: group__real-group
              operator: DoesNotExist
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-8) dst: (group != real-group) conn: All Connections'
        nsx-id: "2200"
    creationTimestamp: null
    name: policy-29
    namespace: seg_2-3
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-8
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg-8
                      operator: Exists
    podSelector:
        matchExpressions:
            - key: group__real-group
              operator: DoesNotExist
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-8) dst: (group != real-group) conn: All Connections'
        nsx-id: "2200"
    creationTimestamp: null
    name: policy-30
    namespace: seg_4-5
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-8
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg-8
                      operator: Exists
    podSelector:
        matchExpressions:
            - key: group__real-group
              operator: DoesNotExist
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-8) dst: (group != real-group) conn: All Connections'
        nsx-id: "2200"
    creationTimestamp: null
    name: policy-31
    namespace: seg-6-7
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-8
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg-8
                      operator: Exists
    podSelector:
        matchExpressions:
            - key: group__real-group
              operator: DoesNotExist
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-8) dst: (group != real-group) conn: All Connections'
        nsx-id: "2200"
    creationTimestamp: null
    name: policy-32
    namespace: seg-8
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-8
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg-8
                      operator: Exists
    podSelector:
        matchExpressions:
            - key: group__real-group
              operator: DoesNotExist
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-8) dst: (group != real-group) conn: All Connections'
        nsx-id: "2200"
    creationTimestamp: null
    name: policy-33
    namespace: seg-9-10
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-8
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg-8
                      operator: Exists
    podSelector:
        matchExpressions:
            - key: group__real-group
              operator: DoesNotExist
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-9-10) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "3000"
    creationTimestamp: null
    name: policy-34
    namespace: seg-9-10
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
                        - seg_1
                        - seg_2-3
                        - seg_4-5
                        - seg-6-7
                        - seg-8
                        - default
              podSelector: {}
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: in_Segment__seg-9-10
              operator: Exists
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-9-10) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "3000"
    creationTimestamp: null
    name: policy-35
    namespace: seg-9-10
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg-9-10
                      operator: Exists
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-9-10) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "3000"
    creationTimestamp: null
    name: policy-36
    namespace: seg_1
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg-9-10
                      operator: Exists
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-9-10) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "3000"
    creationTimestamp: null
    name: policy-37
    namespace: seg_2-3
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg-9-10
                      operator: Exists
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-9-10) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "3000"
    creationTimestamp: null
    name: policy-38
    namespace: seg_4-5
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg-9-10
                      operator: Exists
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-9-10) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "3000"
    creationTimestamp: null
    name: policy-39
    namespace: seg-6-7
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg-9-10
                      operator: Exists
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-9-10) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "3000"
    creationTimestamp: null
    name: policy-40
    namespace: seg-8
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg-9-10
                      operator: Exists
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (segment seg-9-10) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "3000"
    creationTimestamp: null
    name: policy-41
    namespace: default
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-9-10
              podSelector:
                matchExpressions:
                    - key: in_Segment__seg-9-10
                      operator: Exists
    podSelector: {}
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (group = real-group and not in segment seg_4-5 and not in segment seg-8) dst: (group = real-group) conn: All Connections'
        nsx-id: "4008"
    creationTimestamp: null
    name: policy-42
    namespace: seg_1
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - default
              podSelector:
                matchExpressions:
                    - key: group__real-group
                      operator: Exists
    podSelector:
        matchExpressions:
            - key: group__real-group
              operator: Exists
            - key: in_Segment__seg_4-5
              operator: DoesNotExist
            - key: in_Segment__seg-8
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (group = real-group and not in segment seg_4-5 and not in segment seg-8) dst: (group = real-group) conn: All Connections'
        nsx-id: "4008"
    creationTimestamp: null
    name: policy-43
    namespace: seg_2-3
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - default
              podSelector:
                matchExpressions:
                    - key: group__real-group
                      operator: Exists
    podSelector:
        matchExpressions:
            - key: group__real-group
              operator: Exists
            - key: in_Segment__seg_4-5
              operator: DoesNotExist
            - key: in_Segment__seg-8
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (group = real-group and not in segment seg_4-5 and not in segment seg-8) dst: (group = real-group) conn: All Connections'
        nsx-id: "4008"
    creationTimestamp: null
    name: policy-44
    namespace: seg-6-7
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - default
              podSelector:
                matchExpressions:
                    - key: group__real-group
                      operator: Exists
    podSelector:
        matchExpressions:
            - key: group__real-group
              operator: Exists
            - key: in_Segment__seg_4-5
              operator: DoesNotExist
            - key: in_Segment__seg-8
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (group = real-group and not in segment seg_4-5 and not in segment seg-8) dst: (group = real-group) conn: All Connections'
        nsx-id: "4008"
    creationTimestamp: null
    name: policy-45
    namespace: seg-8
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - default
              podSelector:
                matchExpressions:
                    - key: group__real-group
                      operator: Exists
    podSelector:
        matchExpressions:
            - key: group__real-group
              operator: Exists
            - key: in_Segment__seg_4-5
              operator: DoesNotExist
            - key: in_Segment__seg-8
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (group = real-group and not in segment seg_4-5 and not in segment seg-8) dst: (group = real-group) conn: All Connections'
        nsx-id: "4008"
    creationTimestamp: null
    name: policy-46
    namespace: seg-9-10
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - default
              podSelector:
                matchExpressions:
                    - key: group__real-group
                      operator: Exists
    podSelector:
        matchExpressions:
            - key: group__real-group
              operator: Exists
            - key: in_Segment__seg_4-5
              operator: DoesNotExist
            - key: in_Segment__seg-8
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (group = real-group and not in segment seg_4-5 and not in segment seg-8) dst: (group = real-group) conn: All Connections'
        nsx-id: "4008"
    creationTimestamp: null
    name: policy-47
    namespace: seg_4-5
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - default
              podSelector:
                matchExpressions:
                    - key: group__real-group
                      operator: Exists
    podSelector:
        matchExpressions:
            - key: group__real-group
              operator: Exists
            - key: in_Segment__seg_4-5
              operator: DoesNotExist
            - key: in_Segment__seg-8
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (group = real-group and not in segment seg_4-5 and not in segment seg-8) dst: (group = real-group) conn: All Connections'
        nsx-id: "4008"
    creationTimestamp: null
    name: policy-48
    namespace: default
spec:
    egress:
        - to:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - default
              podSelector:
                matchExpressions:
                    - key: group__real-group
                      operator: Exists
    podSelector:
        matchExpressions:
            - key: group__real-group
              operator: Exists
            - key: in_Segment__seg_4-5
              operator: DoesNotExist
            - key: in_Segment__seg-8
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (group = real-group and not in segment seg_4-5 and not in segment seg-8) dst: (group = real-group) conn: All Connections'
        nsx-id: "4008"
    creationTimestamp: null
    name: policy-49
    namespace: default
spec:
    ingress:
        - from:
            - namespaceSelector:
                matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values:
                        - seg-6-7
                        - seg-8
                        - seg-9-10
                        - seg_4-5
                        - default
                        - seg_1
                        - seg_2-3
              podSelector:
                matchExpressions:
                    - key: group__real-group
                      operator: Exists
                    - key: in_Segment__seg_4-5
                      operator: DoesNotExist
                    - key: in_Segment__seg-8
                      operator: DoesNotExist
    podSelector:
        matchExpressions:
            - key: group__real-group
              operator: Exists
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: Default Deny Network Policy
        nsx-id: "1003"
    creationTimestamp: null
    name: default-deny
    namespace: seg-9-10
spec:
    podSelector: {}
    policyTypes:
        - Ingress
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: Default Deny Network Policy
        nsx-id: "1003"
    creationTimestamp: null
    name: default-deny
    namespace: seg_1
spec:
    podSelector: {}
    policyTypes:
        - Ingress
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: Default Deny Network Policy
        nsx-id: "1003"
    creationTimestamp: null
    name: default-deny
    namespace: seg_2-3
spec:
    podSelector: {}
    policyTypes:
        - Ingress
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: Default Deny Network Policy
        nsx-id: "1003"
    creationTimestamp: null
    name: default-deny
    namespace: seg_4-5
spec:
    podSelector: {}
    policyTypes:
        - Ingress
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: Default Deny Network Policy
        nsx-id: "1003"
    creationTimestamp: null
    name: default-deny
    namespace: seg-6-7
spec:
    podSelector: {}
    policyTypes:
        - Ingress
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: Default Deny Network Policy
        nsx-id: "1003"
    creationTimestamp: null
    name: default-deny
    namespace: seg-8
spec:
    podSelector: {}
    policyTypes:
        - Ingress
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: Default Deny Network Policy
        nsx-id: "1003"
    creationTimestamp: null
    name: default-deny
    namespace: default
spec:
    podSelector: {}
    policyTypes:
        - Ingress
        - Egress
