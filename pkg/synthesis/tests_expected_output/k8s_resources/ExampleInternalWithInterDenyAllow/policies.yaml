apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: Network Policy To Allow Access To DNS Server
        nsx-id: none
    creationTimestamp: null
    name: dns-policy
    namespace: default
spec:
    egress:
        - ports:
            - port: 53
              protocol: UDP
          to:
            - namespaceSelector: {}
              podSelector:
                matchLabels:
                    k8s-app: kube-dns
    podSelector: {}
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (VMs within IPs 10.0.0.0/24 and VMs not within IPs 10.0.0.0/30) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1005"
    creationTimestamp: null
    name: policy-1
    namespace: default
spec:
    egress:
        - to:
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: VMs_within_IPs__10.0.0.0-24
              operator: Exists
            - key: VMs_within_IPs__10.0.0.0-30
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (VMs within IPs 10.0.0.0/16 and VMs not within IPs 10.0.0.0/20) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "1007"
    creationTimestamp: null
    name: policy-2
    namespace: default
spec:
    egress:
        - to:
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: VMs_within_IPs__10.0.0.0-16
              operator: Exists
            - key: VMs_within_IPs__10.0.0.0-20
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (VMs within IPs 172.16.10.10/16) dst: (IP addr in 0.0.0.0/0 and group != real-group) conn: All Connections'
        nsx-id: "2000"
    creationTimestamp: null
    name: policy-3
    namespace: default
spec:
    egress:
        - to:
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: VMs_within_IPs__172.16.10.10-16
              operator: Exists
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (VMs within IPs 192.168.0.0/16) dst: (IP addr in 0.0.0.0/0) conn: All Connections'
        nsx-id: "3000"
    creationTimestamp: null
    name: policy-4
    namespace: default
spec:
    egress:
        - to:
            - ipBlock:
                cidr: 0.0.0.0/0
    podSelector:
        matchExpressions:
            - key: VMs_within_IPs__192.168.0.0-16
              operator: Exists
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (group = real-group and VMs not within IPs 10.0.0.0/20 and VMs not within IPs 172.16.10.10/16) dst: (group = real-group) conn: All Connections'
        nsx-id: "4008"
    creationTimestamp: null
    name: policy-5
    namespace: default
spec:
    egress:
        - to:
            - podSelector:
                matchExpressions:
                    - key: group__real-group
                      operator: Exists
    podSelector:
        matchExpressions:
            - key: group__real-group
              operator: Exists
            - key: VMs_within_IPs__10.0.0.0-20
              operator: DoesNotExist
            - key: VMs_within_IPs__172.16.10.10-16
              operator: DoesNotExist
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (group = real-group and VMs not within IPs 10.0.0.0/20 and VMs not within IPs 172.16.10.10/16) dst: (group = real-group) conn: All Connections'
        nsx-id: "4008"
    creationTimestamp: null
    name: policy-6
    namespace: default
spec:
    ingress:
        - from:
            - podSelector:
                matchExpressions:
                    - key: group__real-group
                      operator: Exists
                    - key: VMs_within_IPs__10.0.0.0-20
                      operator: DoesNotExist
                    - key: VMs_within_IPs__172.16.10.10-16
                      operator: DoesNotExist
    podSelector:
        matchExpressions:
            - key: group__real-group
              operator: Exists
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: Default Deny Network Policy
        nsx-id: "1003"
    creationTimestamp: null
    name: default-deny
    namespace: default
spec:
    podSelector: {}
    policyTypes:
        - Ingress
        - Egress
