apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: Network Policy To Allow Access To DNS Server
        nsx-id: none
    creationTimestamp: null
    name: dns-policy
    namespace: default
spec:
    egress:
        - ports:
            - port: 53
              protocol: UDP
          to:
            - namespaceSelector: {}
              podSelector:
                matchLabels:
                    k8s-app: kube-dns
    podSelector: {}
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (group = frontend) dst: (group = backend) conn: TCP dst-ports: 445'
        nsx-id: "1004"
    creationTimestamp: null
    name: policy-1
    namespace: default
spec:
    egress:
        - ports:
            - port: 445
              protocol: TCP
          to:
            - podSelector:
                matchExpressions:
                    - key: group__backend
                      operator: Exists
    podSelector:
        matchExpressions:
            - key: group__frontend
              operator: Exists
    policyTypes:
        - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (group = frontend) dst: (group = backend) conn: TCP dst-ports: 445'
        nsx-id: "1004"
    creationTimestamp: null
    name: policy-2
    namespace: default
spec:
    ingress:
        - from:
            - podSelector:
                matchExpressions:
                    - key: group__frontend
                      operator: Exists
          ports:
            - port: 445
              protocol: TCP
    podSelector:
        matchExpressions:
            - key: group__backend
              operator: Exists
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (IP addr in 8.8.8.8/32) dst: (group = frontend) conn: TCP dst-ports: 80'
        nsx-id: "1005"
    creationTimestamp: null
    name: policy-3
    namespace: default
spec:
    ingress:
        - from:
            - ipBlock:
                cidr: 8.8.8.8/32
          ports:
            - port: 80
              protocol: TCP
    podSelector:
        matchExpressions:
            - key: group__frontend
              operator: Exists
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: 'src: (group = external-group) dst: (group = frontend) conn: TCP dst-ports: 80'
        nsx-id: "1005"
    creationTimestamp: null
    name: policy-4
    namespace: default
spec:
    ingress:
        - from:
            - podSelector:
                matchExpressions:
                    - key: group__external-group
                      operator: Exists
          ports:
            - port: 80
              protocol: TCP
    podSelector:
        matchExpressions:
            - key: group__frontend
              operator: Exists
    policyTypes:
        - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    annotations:
        description: Default Deny Network Policy
        nsx-id: "1003"
    creationTimestamp: null
    name: default-deny
    namespace: default
spec:
    podSelector: {}
    policyTypes:
        - Ingress
        - Egress
